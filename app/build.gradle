plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
}

android {
    namespace 'com.precopia.shiftscheduler'
    compileSdk rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.precopia.shiftscheduler"
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // This ensures that ProGuard removes un-supported language resources.
        // https://developer.android.com/studio/build/shrink-code#unused-alt-resources
        resConfig rootProject.resConfigs
        setProperty("archivesBaseName", "${applicationId}-v${rootProject.versionName}-(${rootProject.versionCode})")
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    //kotlin
    implementation "androidx.core:core-ktx:$rootProject.coreKtxVersion"
    implementation platform("org.jetbrains.kotlin:kotlin-bom:$rootProject.kotlinBomVersion")

    //lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$rootProject.lifecycleRuntimeVersion"

    //compose
    implementation "androidx.activity:activity-compose:$rootProject.activityComposeVersion"
    implementation platform("androidx.compose:compose-bom:$rootProject.composeBomVersion")
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'

    //firebase
    implementation platform("com.google.firebase:firebase-bom:$rootProject.firebaseBomVersion")
    implementation "com.google.firebase:firebase-crashlytics-ktx"
    implementation("com.google.firebase:firebase-analytics-ktx")

    //unit testing
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.junitAndroidExtVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoCoreVersion"
    androidTestImplementation platform("androidx.compose:compose-bom:$rootProject.composeBomVersion")
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'

    //timber
    debugImplementation "com.jakewharton.timber:timber:$rootProject.timberVersion"
    //leak canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakCanaryVersion"

    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}